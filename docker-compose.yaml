services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/?replicaSet=rs0
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass

  core:
    image: core
    restart: always
    depends_on:
      gateway:
        condition: service_started
      mongo:
        condition: service_started
      rabbit:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/demo?replicaSet=rs0
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  gateway:
    image: gateway
    restart: always
    ports:
      - 8081:8081

  rabbit:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mongo-data: